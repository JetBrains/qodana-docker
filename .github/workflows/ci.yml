name: 'CI'
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**/Dockerfile'
  pull_request:
    paths:
      - '**/Dockerfile'
  schedule:
    - cron: '0 0 * * 1'

jobs:
  build233:
    name: "2023.3"
    strategy:
      matrix:
        platform: [ linux/amd64 ]  # linux/arm64
        linter: [ android-community, dotnet, go, js, jvm, jvm-community, php, python, python-community, dotnet-community ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            dockerfile:
              - '2023.3/${{ matrix.linter }}/Dockerfile'
      - if: steps.changes.outputs.dockerfile == 'true'
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - if: steps.changes.outputs.dockerfile == 'true'
        name: Build
        uses: docker/build-push-action@v5
        with:
          tags: jetbrains/qodana-${{ matrix.linter }}:2023.3
          context: 2023.3/${{ matrix.linter }}
          platforms: ${{ matrix.platform }}
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build232:
    name: "2023.2"
    strategy:
      matrix:
        platform: [ linux/amd64 ]  # linux/arm64
        linter: [ android-community, dotnet, go, js, jvm, jvm-community, php, python, python-community ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            dockerfile:
              - '2023.2/${{ matrix.linter }}/Dockerfile'
      - if: steps.changes.outputs.dockerfile == 'true'
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - if: steps.changes.outputs.dockerfile == 'true'
        name: Build
        uses: docker/build-push-action@v5
        with:
          tags: jetbrains/qodana-${{ matrix.linter }}:2023.2
          context: 2023.2/${{ matrix.linter }}
          platforms: ${{ matrix.platform }}
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max